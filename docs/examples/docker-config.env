# Docker Environment Configuration Example
# Copy this file to .env and customize the values for your Docker setup

#==============================================================================
# DIRECTORY CONFIGURATION
#==============================================================================

# Source directory containing video files (host path)
# This directory will be mounted as read-only in the container
SOURCE_DIR=/path/to/your/videos

# Target directory for organized files (host path)
# This directory will be mounted as read-write in the container
TARGET_DIR=/path/to/organized/output

# Configuration directory (host path)
# Contains config.yaml and other configuration files
CONFIG_DIR=./config

# Logs directory (host path)
# Container logs will be written here
LOGS_DIR=./logs

#==============================================================================
# APPLICATION CONFIGURATION
#==============================================================================

# Log level for the application
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Configuration file path inside container
# Usually doesn't need to be changed
CONFIG_FILE=/app/config/config.yaml

#==============================================================================
# SCRAPER CONFIGURATION
#==============================================================================

# JavDB login credentials (optional but recommended)
# Leave empty to disable JavDB login
JAVDB_USERNAME=
JAVDB_PASSWORD=

# Maximum concurrent files to process
# Reduce if you have limited resources
MAX_CONCURRENT_FILES=2

# Maximum concurrent scraper requests
# Balance between speed and rate limiting
MAX_CONCURRENT_REQUESTS=2

# Maximum concurrent image downloads
# Can be higher than requests since images are lighter
MAX_CONCURRENT_DOWNLOADS=4

#==============================================================================
# NETWORK CONFIGURATION
#==============================================================================

# HTTP proxy URL (optional)
# Example: http://proxy.example.com:8080
HTTP_PROXY=

# HTTPS proxy URL (optional)
# Usually same as HTTP_PROXY
HTTPS_PROXY=

# No proxy hosts (optional)
# Comma-separated list of hosts to bypass proxy
NO_PROXY=localhost,127.0.0.1

#==============================================================================
# CONTAINER CONFIGURATION
#==============================================================================

# Memory limit for the container
# Adjust based on your system resources
MEMORY_LIMIT=2G

# CPU limit for the container
# 1.0 = 1 CPU core, 2.0 = 2 CPU cores, etc.
CPU_LIMIT=2.0

# Timezone for the container
# Use your local timezone for proper log timestamps
TZ=UTC

#==============================================================================
# SECURITY CONFIGURATION
#==============================================================================

# User ID to run container as (optional)
# Use your user ID to avoid permission issues
PUID=1000

# Group ID to run container as (optional)
# Use your group ID to avoid permission issues
PGID=1000

#==============================================================================
# ADVANCED CONFIGURATION
#==============================================================================

# Enable debug mode (true/false)
# Enables verbose logging and debugging features
DEBUG_MODE=false

# Enable safe mode (true/false)
# Copy files instead of moving them (safer but uses more disk space)
SAFE_MODE=true

# Create metadata files alongside videos (true/false)
CREATE_METADATA_FILES=true

# Download images (cover, poster, screenshots) (true/false)
DOWNLOAD_IMAGES=true

# Resize large images to save space (true/false)
RESIZE_IMAGES=false

# Create thumbnail versions of images (true/false)
CREATE_THUMBNAILS=false

# Maximum image width (pixels)
MAX_IMAGE_WIDTH=1920

# Maximum image height (pixels)
MAX_IMAGE_HEIGHT=1080

# JPEG quality for images (1-100)
IMAGE_QUALITY=90

#==============================================================================
# PERFORMANCE TUNING
#==============================================================================

# Browser timeout in seconds
BROWSER_TIMEOUT=30

# Network request timeout in seconds
REQUEST_TIMEOUT=30

# Number of retry attempts for failed operations
RETRY_ATTEMPTS=3

# Delay between requests in seconds (rate limiting)
REQUEST_DELAY=1.0

# Enable Chrome GPU acceleration (true/false)
# Disable if running on headless server
ENABLE_GPU=false

# Chrome shared memory size
# Increase if you get "DevToolsActivePort file doesn't exist" errors
SHM_SIZE=2g

#==============================================================================
# MONITORING AND HEALTH CHECKS
#==============================================================================

# Health check interval in seconds
HEALTH_CHECK_INTERVAL=30

# Health check timeout in seconds
HEALTH_CHECK_TIMEOUT=10

# Health check retries before marking unhealthy
HEALTH_CHECK_RETRIES=3

# Enable container statistics collection (true/false)
ENABLE_STATS=true

# Statistics collection interval in seconds
STATS_INTERVAL=60

#==============================================================================
# BACKUP AND RECOVERY
#==============================================================================

# Enable automatic progress saving (true/false)
ENABLE_PROGRESS_SAVE=true

# Progress save interval in seconds
PROGRESS_SAVE_INTERVAL=300

# Enable automatic backup of configuration (true/false)
ENABLE_CONFIG_BACKUP=true

# Backup retention days
BACKUP_RETENTION_DAYS=30

#==============================================================================
# DEVELOPMENT OPTIONS
#==============================================================================

# Enable Chrome DevTools port (true/false)
# Only enable for debugging, exposes port 9222
ENABLE_DEVTOOLS=false

# Enable file watching for live reload (true/false)
# Only useful for development
ENABLE_FILE_WATCH=false

# Mount source code for development (true/false)
# Only for development, allows live code editing
MOUNT_SOURCE_CODE=false

#==============================================================================
# NOTIFICATION SETTINGS
#==============================================================================

# Enable webhook notifications (true/false)
ENABLE_WEBHOOKS=false

# Webhook URL for completion notifications
WEBHOOK_COMPLETION_URL=

# Webhook URL for error notifications
WEBHOOK_ERROR_URL=

# Webhook authentication token
WEBHOOK_AUTH_TOKEN=

#==============================================================================
# EXAMPLE CONFIGURATIONS
#==============================================================================

# Example 1: Basic setup for home use
# SOURCE_DIR=/home/user/Videos/Unsorted
# TARGET_DIR=/home/user/Videos/Organized
# MAX_CONCURRENT_FILES=2
# SAFE_MODE=true
# LOG_LEVEL=INFO

# Example 2: High-performance server setup
# SOURCE_DIR=/mnt/storage/videos
# TARGET_DIR=/mnt/organized/videos
# MAX_CONCURRENT_FILES=8
# MAX_CONCURRENT_REQUESTS=4
# MAX_CONCURRENT_DOWNLOADS=12
# MEMORY_LIMIT=8G
# CPU_LIMIT=4.0
# SAFE_MODE=false

# Example 3: Low-resource setup (Raspberry Pi, etc.)
# SOURCE_DIR=/media/usb/videos
# TARGET_DIR=/media/usb/organized
# MAX_CONCURRENT_FILES=1
# MAX_CONCURRENT_REQUESTS=1
# MAX_CONCURRENT_DOWNLOADS=2
# MEMORY_LIMIT=1G
# CPU_LIMIT=1.0
# RESIZE_IMAGES=true
# IMAGE_QUALITY=75

# Example 4: Corporate environment with proxy
# HTTP_PROXY=http://proxy.company.com:8080
# HTTPS_PROXY=http://proxy.company.com:8080
# NO_PROXY=localhost,127.0.0.1,company.internal
# REQUEST_TIMEOUT=60
# RETRY_ATTEMPTS=5