# AutoJAV Web界面 Docker镜像 (带VNC和Supervisor)
FROM python:3.11-slim

# 1. 安装系统依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Supervisor
    supervisor \
    # VNC 和桌面环境
    xfce4 xfce4-goodies tigervnc-standalone-server tigervnc-common websockify sudo \
    # 浏览器及其依赖
    chromium chromium-driver wget curl gnupg ca-certificates fonts-liberation \
    libasound2 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libcups2 libdbus-1-3 \
    libdrm2 libgtk-3-0 libnspr4 libnss3 libwayland-client0 libxcomposite1 \
    libxdamage1 libxfixes3 libxkbcommon0 libxrandr2 xdg-utils \
    # 构建工具
    gcc python3-dev build-essential \
    && rm -rf /var/lib/apt/lists/*

# 2. 安装 noVNC (Web VNC客户端)
RUN mkdir -p /opt/novnc && \
    wget -qO- "https://github.com/novnc/noVNC/archive/v1.4.0.tar.gz" | tar xz --strip 1 -C /opt/novnc

# 3. 创建软链接
RUN ln -s /usr/bin/chromium /usr/bin/google-chrome && \
    ln -s /usr/bin/chromedriver /usr/local/bin/chromedriver

# 4. 设置工作目录
WORKDIR /app

# 5. 复制并安装Python依赖
COPY requirements_web.txt ./
RUN pip install --no-cache-dir -r requirements_web.txt

# 6. 复制应用代码和配置文件
COPY . /app/
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
RUN chmod +x /app/scripts/vnc_startup.sh

# 7. 创建必要的目录
RUN mkdir -p /app/config /app/logs /app/source /app/organized /var/log/supervisor

# 8. 暴露端口
EXPOSE 5000  # Flask App
EXPOSE 5901  # VNC Server
EXPOSE 6901  # noVNC Web Client

# 9. 环境变量
ENV DISPLAY=:1 \
    VNC_PASSWORD=password \
    PYTHONUNBUFFERED=1 \
    FLASK_APP=web_app.py \
    CHROME_BIN=/usr/bin/chromium \
    CHROMEDRIVER_PATH=/usr/bin/chromedriver

# 10. 启动Supervisor
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisord.conf"]