services:
  av-scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: av-metadata-scraper
    restart: unless-stopped
    
    # Environment variables
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CONFIG_FILE=/app/config/config.yaml
      - PYTHONPATH=/app/src
      - PYTHONUNBUFFERED=1
      - DISPLAY=:99
      - CHROME_BIN=/usr/bin/google-chrome
      - CHROMEDRIVER_PATH=/usr/local/bin/chromedriver
      - TZ=${TZ:-UTC}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      # Optional JavDB credentials
      - JAVDB_USERNAME=${JAVDB_USERNAME:-}
      - JAVDB_PASSWORD=${JAVDB_PASSWORD:-}
      # Processing configuration
      - MAX_CONCURRENT_FILES=${MAX_CONCURRENT_FILES:-2}
      - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-2}
      - MAX_CONCURRENT_DOWNLOADS=${MAX_CONCURRENT_DOWNLOADS:-2}
      # Network configuration
      - HTTP_PROXY=${HTTP_PROXY:-}
      - HTTPS_PROXY=${HTTPS_PROXY:-}
      # Feature flags
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - SAFE_MODE=${SAFE_MODE:-true}
      - CREATE_METADATA_FILES=${CREATE_METADATA_FILES:-true}
      - DOWNLOAD_IMAGES=${DOWNLOAD_IMAGES:-true}
      - RESIZE_IMAGES=${RESIZE_IMAGES:-false}
      - CREATE_THUMBNAILS=${CREATE_THUMBNAILS:-false}
    
    # Volume mounts
    volumes:
      # Source directory (read-only)
      - ${SOURCE_DIR:-./source}:/app/source:ro
      # Target directory (read-write)
      - ${TARGET_DIR:-./organized}:/app/target
      # Configuration directory
      - ${CONFIG_DIR:-./config}:/app/config
      # Logs directory
      - ${LOGS_DIR:-./logs}:/app/logs
      # Chrome user data (for session persistence)
      - chrome-data:/app/.chrome-data
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-2G}
          cpus: '${CPU_LIMIT:-2.0}'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Network configuration
    networks:
      - av-scraper-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "/app/docker/healthcheck.py"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 90s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Web UI service (for future implementation)
  # av-scraper-ui:
  #   build:
  #     context: ./ui
  #     dockerfile: Dockerfile
  #   container_name: av-scraper-ui
  #   restart: unless-stopped
  #   ports:
  #     - "${UI_PORT:-8080}:8080"
  #   environment:
  #     - API_URL=http://av-scraper:8000
  #   networks:
  #     - av-scraper-network
  #   depends_on:
  #     - av-scraper

# Named volumes
volumes:
  chrome-data:
    driver: local

# Networks
networks:
  av-scraper-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16